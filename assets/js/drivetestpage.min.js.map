{"version":3,"file":"drivetestpage.min.js","mappings":"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","sources":["webpack://wpmudev-plugin-test/external var \"wp.element\"","webpack://wpmudev-plugin-test/external var \"wp.components\"","webpack://wpmudev-plugin-test/./src/googledrive-page/main.jsx"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = wp.element;","const __WEBPACK_NAMESPACE_OBJECT__ = wp.components;","import { createRoot, render, StrictMode, useState, useEffect, createInterpolateElement } from '@wordpress/element';\nimport { Button, TextControl, Spinner, Notice } from '@wordpress/components';\n\nimport \"./scss/style.scss\"\n\n// Wait for DOM and localized data to be available\nif (typeof window.wpmudevDriveTest === 'undefined') {\n    console.error('WPMU DEV Drive Test: Localized data not available');\n}\n\nconst domElement = document.getElementById( window.wpmudevDriveTest?.dom_element_id );\n\nif (!domElement) {\n    console.error('WPMU DEV Drive Test: DOM element not found');\n}\n\nconst WPMUDEV_DriveTest = () => {\n    const [isAuthenticated, setIsAuthenticated] = useState(window.wpmudevDriveTest?.authStatus || false);\n    const [hasCredentials, setHasCredentials] = useState(window.wpmudevDriveTest?.hasCredentials || false);\n    const [showCredentials, setShowCredentials] = useState(!window.wpmudevDriveTest?.hasCredentials);\n    \n    // Get i18n strings\n    const i18n = window.wpmudevDriveTest?.i18n || {};\n    const [isLoading, setIsLoading] = useState(false);\n    const [files, setFiles] = useState([]);\n    const [uploadFile, setUploadFile] = useState(null);\n    const [folderName, setFolderName] = useState('');\n    const [notice, setNotice] = useState({ message: '', type: '' });\n    const [credentials, setCredentials] = useState({\n        clientId: '',\n        clientSecret: ''\n    });\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            loadFiles();\n        }\n    }, [isAuthenticated]);\n\n    const showNotice = (message, type = 'success') => {\n        setNotice({ message, type });\n        setTimeout(() => setNotice({ message: '', type: '' }), 5000);\n    };\n\n    const handleSaveCredentials = async () => {\n        console.log('WPMU DEV Plugin Test: Save credentials clicked');\n        \n        if (!credentials.clientId.trim() || !credentials.clientSecret.trim()) {\n            showNotice(i18n.enterBothCredentials || 'Please enter both Client ID and Client Secret', 'error');\n            return;\n        }\n\n        console.log('WPMU DEV Plugin Test: Starting credentials save');\n        setIsLoading(true);\n        \n        try {\n            const requestData = {\n                client_id: credentials.clientId,\n                client_secret: credentials.clientSecret\n            };\n            \n            console.log('WPMU DEV Plugin Test: Sending request:', requestData);\n            \n            const response = await fetch(`/wp-json/wpmudev/v1/drive/save-credentials`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce\n                },\n                body: JSON.stringify(requestData)\n            });\n\n            console.log('WPMU DEV Plugin Test: Response status:', response.status);\n            const data = await response.json();\n            console.log('WPMU DEV Plugin Test: Response data:', data);\n\n            if (data.success) {\n                showNotice(i18n.credentialsSaved || 'Credentials saved successfully!', 'success');\n                setHasCredentials(true);\n                setShowCredentials(false);\n            } else {\n                showNotice(data.message || i18n.credentialsSaveError || 'Failed to save credentials', 'error');\n            }\n        } catch (error) {\n            console.error('WPMU DEV Plugin Test: Error saving credentials:', error);\n            showNotice((i18n.errorSavingCredentials || 'Error saving credentials:') + ' ' + error.message, 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleAuth = async () => {\n        setIsLoading(true);\n        try {\n            const response = await fetch(`/wp-json/wpmudev/v1/drive/auth`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce\n                }\n            });\n\n            const data = await response.json();\n\n            if (data.success && data.auth_url) {\n                // Redirect to Google OAuth\n                window.location.href = data.auth_url;\n            } else {\n                showNotice(data.message || i18n.authError || 'Failed to start authentication', 'error');\n            }\n        } catch (error) {\n            showNotice((i18n.errorAuthenticating || 'Error starting authentication:') + ' ' + error.message, 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const loadFiles = async () => {\n        setIsLoading(true);\n        try {\n            const response = await fetch(`/wp-json/wpmudev/v1/drive/files`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce\n                }\n            });\n\n            const data = await response.json();\n\n            if (data.success && data.files) {\n                setFiles(data.files);\n            } else {\n                showNotice(data.message || 'Failed to load files', 'error');\n            }\n        } catch (error) {\n            showNotice('Error loading files: ' + error.message, 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleUpload = async () => {\n        if (!uploadFile) {\n            showNotice(i18n.selectFile || 'Please select a file to upload', 'error');\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            const formData = new FormData();\n            formData.append('file', uploadFile);\n\n            const response = await fetch(`/wp-json/wpmudev/v1/drive/upload`, {\n                method: 'POST',\n                headers: {\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce\n                },\n                body: formData\n            });\n\n            const data = await response.json();\n\n            if (data.success && data.file) {\n                showNotice(i18n.fileUploaded || 'File uploaded successfully!', 'success');\n                setUploadFile(null);\n                // Refresh files list\n                await loadFiles();\n            } else {\n                showNotice(data.message || i18n.fileUploadError || 'Failed to upload file', 'error');\n            }\n        } catch (error) {\n            showNotice((i18n.errorUploadingFile || 'Error uploading file:') + ' ' + error.message, 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleDownload = async (fileId, fileName) => {\n        setIsLoading(true);\n        try {\n            const response = await fetch(`/wp-json/wpmudev/v1/drive/download?file_id=${fileId}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce\n                }\n            });\n\n            const data = await response.json();\n\n            if (data.success && data.content) {\n                // Create download link\n                const blob = new Blob([Uint8Array.from(atob(data.content), c => c.charCodeAt(0))], { type: data.mimeType });\n                const url = window.URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.href = url;\n                a.download = fileName;\n                document.body.appendChild(a);\n                a.click();\n                window.URL.revokeObjectURL(url);\n                document.body.removeChild(a);\n                showNotice('File downloaded successfully!', 'success');\n            } else {\n                showNotice(data.message || 'Failed to download file', 'error');\n            }\n        } catch (error) {\n            showNotice('Error downloading file: ' + error.message, 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleCreateFolder = async () => {\n        if (!folderName.trim()) {\n            showNotice(i18n.enterFolderName || 'Please enter a folder name', 'error');\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            const response = await fetch(`/wp-json/wpmudev/v1/drive/create-folder`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-WP-Nonce': window.wpmudevDriveTest.nonce\n                },\n                body: JSON.stringify({\n                    name: folderName\n                })\n            });\n\n            const data = await response.json();\n\n            if (data.success && data.folder) {\n                showNotice(i18n.folderCreated || 'Folder created successfully!', 'success');\n                setFolderName('');\n                // Refresh files list\n                await loadFiles();\n            } else {\n                showNotice(data.message || i18n.folderCreateError || 'Failed to create folder', 'error');\n            }\n        } catch (error) {\n            showNotice((i18n.errorCreatingFolder || 'Error creating folder:') + ' ' + error.message, 'error');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <>\n            <div className=\"sui-header\">\n                <h1 className=\"sui-header-title\">\n                    {i18n.pageTitle || 'Google Drive Test'}\n                </h1>\n                <p className=\"sui-description\">{i18n.pageDescription || 'Test Google Drive API integration for applicant assessment'}</p>\n            </div>\n\n            {notice.message && (\n                <Notice status={notice.type} isDismissible onRemove=''>\n                    {notice.message}\n                </Notice>\n            )}\n\n            {showCredentials ? (\n                <div className=\"sui-box\">\n                    <div className=\"sui-box-header\">\n                        <h2 className=\"sui-box-title\">{i18n.credentialsTitle || 'Set Google Drive Credentials'}</h2>\n                    </div>\n                    <div className=\"sui-box-body\">\n                        <div className=\"sui-box-settings-row\">\n                            <TextControl\n                                help={createInterpolateElement(\n                                    i18n.clientIdHelp || 'You can get Client ID from <a>Google Cloud Console</a>. Make sure to enable Google Drive API.',\n                                    {\n                                        a: <a href=\"https://console.cloud.google.com/apis/credentials\" target=\"_blank\" rel=\"noopener noreferrer\" />,\n                                    }\n                                )}\n                                label={i18n.clientIdLabel || 'Client ID'}\n                                value={credentials.clientId}\n                                onChange={(value) => setCredentials({...credentials, clientId: value})}\n                            />\n                        </div>\n\n                        <div className=\"sui-box-settings-row\">\n                            <TextControl\n                                help={createInterpolateElement(\n                                    i18n.clientSecretHelp || 'You can get Client Secret from <a>Google Cloud Console</a>.',\n                                    {\n                                        a: <a href=\"https://console.cloud.google.com/apis/credentials\" target=\"_blank\" rel=\"noopener noreferrer\" />,\n                                    }\n                                )}\n                                label={i18n.clientSecretLabel || 'Client Secret'}\n                                value={credentials.clientSecret}\n                                onChange={(value) => setCredentials({...credentials, clientSecret: value})}\n                                type=\"password\"\n                            />\n                        </div>\n\n                        <div className=\"sui-box-settings-row\">\n                            <span>{i18n.redirectUriLabel || 'Please use this URL'} <em>{window.wpmudevDriveTest.redirectUri}</em> {i18n.redirectUriLabel ? '' : 'in your Google API\\'s Authorized redirect URIs field.'}</span>\n                        </div>\n\n                        <div className=\"sui-box-settings-row\">\n                            <p><strong>{i18n.requiredScopesTitle || 'Required scopes for Google Drive API:'}</strong></p>\n                            <ul>\n                                <li>https://www.googleapis.com/auth/drive.file</li>\n                                <li>https://www.googleapis.com/auth/drive.readonly</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"sui-box-footer\">\n                        <div className=\"sui-actions-right\">\n                            <Button\n                                variant=\"primary\"\n                                onClick={handleSaveCredentials}\n                                disabled={isLoading}\n                            >\n                                {isLoading ? <Spinner /> : (i18n.saveCredentialsButton || 'Save Credentials')}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            ) : !isAuthenticated ? (\n                <div className=\"sui-box\">\n                    <div className=\"sui-box-header\">\n                        <h2 className=\"sui-box-title\">{i18n.authTitle || 'Authenticate with Google Drive'}</h2>\n                    </div>\n                    <div className=\"sui-box-body\">\n                        <div className=\"sui-box-settings-row\">\n                            <p>{i18n.authDescription || 'Please authenticate with Google Drive to proceed with the test.'}</p>\n                            <p><strong>{i18n.authPermissionsTitle || 'This test will require the following permissions:'}</strong></p>\n                            <ul>\n                                <li>{i18n.authPermission1 || 'View and manage Google Drive files'}</li>\n                                <li>{i18n.authPermission2 || 'Upload new files to Drive'}</li>\n                                <li>{i18n.authPermission3 || 'Create folders in Drive'}</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"sui-box-footer\">\n                        <div className=\"sui-actions-left\">\n                            <Button\n                                variant=\"secondary\"\n                                onClick={() => setShowCredentials(true)}\n                            >\n                                {i18n.changeCredentialsButton || 'Change Credentials'}\n                            </Button>\n                        </div>\n                        <div className=\"sui-actions-right\">\n                            <Button\n                                variant=\"primary\"\n                                onClick={handleAuth}\n                                disabled={isLoading}\n                            >\n                                {isLoading ? <Spinner /> : (i18n.authenticateButton || 'Authenticate with Google Drive')}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <>\n                    {/* File Upload Section */}\n                    <div className=\"sui-box\">\n                        <div className=\"sui-box-header\">\n                            <h2 className=\"sui-box-title\">{i18n.uploadFileButton || 'Upload File to Drive'}</h2>\n                        </div>\n                        <div className=\"sui-box-body\">\n                            <div className=\"sui-box-settings-row\">\n                                <input\n                                    type=\"file\"\n                                    onChange={(e) => setUploadFile(e.target.files[0])}\n                                    className=\"drive-file-input\"\n                                />\n                                {uploadFile && (\n                                    <p><strong>{i18n.noFileSelected || 'Selected:'}</strong> {uploadFile.name} ({Math.round(uploadFile.size / 1024)} KB)</p>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"sui-box-footer\">\n                            <div className=\"sui-actions-right\">\n                                <Button\n                                    variant=\"primary\"\n                                    onClick={handleUpload}\n                                    disabled={isLoading || !uploadFile}\n                                >\n                                    {isLoading ? <Spinner /> : (i18n.uploadFileButton || 'Upload to Drive')}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Create Folder Section */}\n                    <div className=\"sui-box\">\n                        <div className=\"sui-box-header\">\n                            <h2 className=\"sui-box-title\">{i18n.createFolderButton || 'Create New Folder'}</h2>\n                        </div>\n                        <div className=\"sui-box-body\">\n                            <div className=\"sui-box-settings-row\">\n                                <TextControl\n                                    label={i18n.folderNamePlaceholder || 'Folder Name'}\n                                    value={folderName}\n                                    onChange={setFolderName}\n                                    placeholder={i18n.folderNamePlaceholder || 'Enter folder name'}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"sui-box-footer\">\n                            <div className=\"sui-actions-right\">\n                                <Button\n                                    variant=\"secondary\"\n                                    onClick={handleCreateFolder}\n                                    disabled={isLoading || !folderName.trim()}\n                                >\n                                    {isLoading ? <Spinner /> : (i18n.createFolderButton || 'Create Folder')}\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Files List Section */}\n                    <div className=\"sui-box\">\n                        <div className=\"sui-box-header\">\n                            <h2 className=\"sui-box-title\">{i18n.filesTitle || 'Your Drive Files'}</h2>\n                            <div className=\"sui-actions-right\">\n                                <Button\n                                    variant=\"secondary\"\n                                    onClick={loadFiles}\n                                    disabled={isLoading}\n                                >\n                                    {isLoading ? <Spinner /> : (i18n.refreshFilesButton || 'Refresh Files')}\n                                </Button>\n                            </div>\n                        </div>\n                        <div className=\"sui-box-body\">\n                            {isLoading ? (\n                                <div className=\"drive-loading\">\n                                    <Spinner />\n                                    <p>{i18n.loading || 'Loading files...'}</p>\n                                </div>\n                            ) : files.length > 0 ? (\n                                <div className=\"drive-files-grid\">\n                                    {files.map((file) => (\n                                        <div key={file.id} className=\"drive-file-item\">\n                                            <div className=\"file-info\">\n                                                <strong>{file.name}</strong>\n                                                <small>\n                                                    {file.isFolder ? (i18n.fileTypeFolder || 'Folder') : `${i18n.fileTypeFile || 'File'} (${file.size ? Math.round(file.size / 1024) + ' KB' : 'Unknown size'})`}\n                                                </small>\n                                                <small>\n                                                    {file.modifiedTime ? new Date(file.modifiedTime).toLocaleDateString() : 'Unknown date'}\n                                                </small>\n                                            </div>\n                                            <div className=\"file-actions\">\n                                                {!file.isFolder && (\n                                                    <Button\n                                                        variant=\"secondary\"\n                                                        size=\"small\"\n                                                        onClick={() => handleDownload(file.id, file.name)}\n                                                        disabled={isLoading}\n                                                    >\n                                                        {i18n.downloadButton || 'Download'}\n                                                    </Button>\n                                                )}\n                                                {file.webViewLink && (\n                                                    <Button\n                                                        variant=\"link\"\n                                                        size=\"small\"\n                                                        href={file.webViewLink}\n                                                        target=\"_blank\"\n                                                    >\n                                                        {i18n.viewInDriveButton || 'View in Drive'}\n                                                    </Button>\n                                                )}\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            ) : (\n                                <div className=\"sui-box-settings-row\">\n                                    <p>{i18n.noFilesFound || 'No files found in your Drive. Upload a file or create a folder to get started.'}</p>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </>\n            )}\n        </>\n    );\n}\n\nif (domElement && window.wpmudevDriveTest) {\n    if ( createRoot ) {\n        createRoot( domElement ).render(<StrictMode><WPMUDEV_DriveTest/></StrictMode>);\n    } else {\n        render( <StrictMode><WPMUDEV_DriveTest/></StrictMode>, domElement );\n    }\n} else {\n    console.error('WPMU DEV Drive Test: Cannot render component - missing DOM element or localized data');\n}"],"names":["wp","element","components","window","wpmudevDriveTest","console","error","domElement","document","getElementById","_window$wpmudevDriveT","dom_element_id","WPMUDEV_DriveTest","_window$wpmudevDriveT2","_window$wpmudevDriveT3","_window$wpmudevDriveT4","_window$wpmudevDriveT5","isAuthenticated","setIsAuthenticated","useState","authStatus","hasCredentials","setHasCredentials","showCredentials","setShowCredentials","i18n","isLoading","setIsLoading","files","setFiles","uploadFile","setUploadFile","folderName","setFolderName","notice","setNotice","message","type","credentials","setCredentials","clientId","clientSecret","useEffect","loadFiles","showNotice","arguments","length","undefined","setTimeout","async","response","fetch","method","headers","nonce","data","json","success","React","createElement","Fragment","className","pageTitle","pageDescription","Notice","status","isDismissible","onRemove","credentialsTitle","TextControl","help","createInterpolateElement","clientIdHelp","a","href","target","rel","label","clientIdLabel","value","onChange","_objectSpread","clientSecretHelp","clientSecretLabel","redirectUriLabel","redirectUri","requiredScopesTitle","Button","variant","onClick","log","trim","requestData","client_id","client_secret","body","JSON","stringify","credentialsSaved","credentialsSaveError","errorSavingCredentials","enterBothCredentials","disabled","Spinner","saveCredentialsButton","uploadFileButton","e","noFileSelected","name","Math","round","size","formData","FormData","append","file","fileUploaded","fileUploadError","errorUploadingFile","selectFile","createFolderButton","folderNamePlaceholder","placeholder","folder","folderCreated","folderCreateError","errorCreatingFolder","enterFolderName","filesTitle","refreshFilesButton","loading","map","key","id","isFolder","fileTypeFolder","concat","fileTypeFile","modifiedTime","Date","toLocaleDateString","fileId","fileName","content","blob","Blob","Uint8Array","from","atob","c","charCodeAt","mimeType","url","URL","createObjectURL","download","appendChild","click","revokeObjectURL","removeChild","handleDownload","downloadButton","webViewLink","viewInDriveButton","noFilesFound","authTitle","authDescription","authPermissionsTitle","authPermission1","authPermission2","authPermission3","changeCredentialsButton","auth_url","location","authError","errorAuthenticating","authenticateButton","createRoot","render","StrictMode"],"sourceRoot":""}